name: Release Workflow

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/checkout@v2
                - name: Set up JDK 11
                uses: actions/setup-java@v2
                with:
                  java-version: '11'
                  distribution: 'adopt'
                  cache: maven

      - name: Validate, build and run tests
        run: mvn --batch-mode --update-snapshots verify

      - name: Extract version from tag
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Update version in pom.xml
        run: |
          xmlstarlet ed -L \
          -u "/project/version" \
          -v "${{ env.version }}" pom.xml

      - name: Checkout branch
        run: |
          git fetch origin main:main
          git checkout main



      - name: Commit updated pom.xml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Update version in pom.xml to ${{ env.version }}"

      - name: Build with Maven
        run: mvn clean install

      - name: List files in target
        run: ls -l target

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/SortingApp.jar
          asset_name: SortingApp.jar
          asset_content_type: application/java-archive
